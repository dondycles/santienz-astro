---
import type { Database } from '@/db/types';
import { imgUrlFromSb } from '@/lib/utils';
import { Image } from 'astro:assets';
import { CheckCircle } from 'lucide-react';
import Heading2AndP from './syntax/Heading2AndP.astro';

interface Props {
  product: Pick<
    Database['public']['Tables']['products']['Row'],
    'description' | 'id' | 'imgs' | 'name' | 'highlights'
  >;
}

const { product } = Astro.props;
const haveImages = (product.imgs as string[]).length > 0;
---

<section
  id={product.name.toLocaleLowerCase().replaceAll(' ', '-')}
  class={`${haveImages ? 'grid' : ''} grid-cols-1 lg:grid-cols-5 gap-6 scroll-m-18 mt-12 max-w-6xl mx-auto`}
>
  <Heading2AndP
    h={product.name}
    p={product.description}
    alignment="left-only"
    hClass="text-tertiary"
    pClass=" whitespace-pre-wrap"
    hAndPParentClass={`${haveImages ? '' : ''} w-full lg:col-span-3`}
  >
    <div class="mt-6 flex flex-wrap gap-4">
      {
        (product.highlights as string[]).map((highlight) => (
          <div>
            <CheckCircle className="inline mr-1 text-tertiary" />
            <span class="text-muted-foreground capitalize">{highlight}</span>
          </div>
        ))
      }
    </div>
  </Heading2AndP>
  {
    haveImages ? (
      <div class="mx-auto mt-0 mb-auto grid w-full max-w-4xl gap-1 px-1 sm:grid-cols-[repeat(auto-fit,minmax(256px,1fr))] lg:col-span-2 lg:grid-cols-[repeat(auto-fit,minmax(156px,1fr))]">
        {(product.imgs as string[]).map((img, i) => (
          <Image
            src={imgUrlFromSb('products', img)}
            alt={`${product.name},${i}`}
            inferSize
            class="m-auto w-full max-w-md rounded-md object-contain drop-shadow-xl"
          />
        ))}
      </div>
    ) : null
  }
</section>
