---
export const prerender = false;
import type { Database } from "@/db/types";
import { Image } from "astro:assets";

interface Props {
  projects: Database["public"]["Tables"]["projects"]["Row"][];
  query?: string;
}

const { projects, query } = Astro.props;

const featured_projects = projects.filter((project) => project.imgs !== null);
---

{
  featured_projects.length
    ? featured_projects.map((project, i) => {
        return (
          <a
            href={`/projects/${project.slug}`}
            class={`w-full h-full mb-0 mt-auto ${i === 0 ? "xxs:row-span-4" : i === featured_projects.length - 1 ? "xxs:row-span-4" : "xxs:row-span-5"}`}
          >
            <section
              class={`bg-primary/10 rounded-xl flex flex-col h-full  overflow-hidden relative `}
              id={project.title}
            >
              <Image
                src={
                  `${import.meta.env.SUPABASE_URL}/storage/v1/object/public/projects/` +
                  (project.imgs as string[])[0]
                }
                alt={project.title}
                class="w-full h-full object-cover shrink-0"
                quality="mid"
                width="420"
                height="236"
              />
              <h2 class="text-primary-foreground text-base sm:text-2xl font-medium p-3 xmd:p-4 absolute bottom-0 left-0 right-0 drop-shadow-sm bg-gradient-to-t from-foreground to-transparent leading-snug">
                {project.title}
              </h2>
            </section>
          </a>
        );
      })
    : null
}
<!-- <p class="text-muted-foreground text-center col-span-full mb-2 px-4">
     No results for {query}
     <span>
       <Frown className="inline ml-1" />
     </span>
   </p> -->
