---
export const prerender = false;

import { Image } from "astro:assets";
import type { Database } from "@/db/types";
import { imgUrlFromSb } from "@/lib/utils";

interface Props {
  projects: Pick<
    Database["public"]["Tables"]["projects"]["Row"],
    "id" | "imgs" | "slug" | "title"
  >[];
}

const { projects } = Astro.props;

const featured_projects = projects.filter((project) => project.imgs !== null);
---

{
  featured_projects.length
    ? featured_projects.map((project, i) => {
        return (
          <a
            href={`/projects/${project.slug}`}
            class={`w-full mb-0 mt-auto h-full`}
          >
            <section
              class={`bg-primary/5 rounded-md flex flex-col h-full max-h-52 w-full overflow-hidden relative `}
              id={project.title}
            >
              <Image
                src={imgUrlFromSb("projects", (project.imgs as string[])[0])}
                alt={project.title}
                class="w-full h-full object-cover object-center shrink-0 brightness-75"
                quality="mid"
                inferSize
              />
              <div class="bg-gradient-to-t from-tertiary/25 to-transparent absolute bottom-0 left-0 right-0 p-3 xmd:p-4">
                <h2 class="text-primary-foreground text-base sm:text-2xl font-medium  drop-shadow  leading-tight">
                  {project.title}
                </h2>
              </div>
            </section>
          </a>
        );
      })
    : null
}
<!-- <p class="text-muted-foreground text-center col-span-full mb-2 px-4">
     No results for {query}
     <span>
       <Frown className="inline ml-1" />
     </span>
   </p> -->
