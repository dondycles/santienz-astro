---
export const prerender = false;

import CTAButton from '@/components/CTAButton';
import DesktopNavigation from '@/components/DesktopNavigation';
import Grid3DBg from '@/components/Grid3DBg.astro';
import LinearGradientMask from '@/components/LinearGradientMask.astro';
import MobileNavigation from '@/components/MobileNavigation';
import Header from '@/components/syntax/Header.astro';
import Heading1AndP from '@/components/syntax/Heading1AndP.astro';
import MainHeroOverlay from '@/components/syntax/MainHeroOverlay.astro';
import { supabase } from '@/db/supabase';
import MainLayout from '@/layouts/MainLayout.astro';
import { imgUrlFromSb } from '@/lib/utils';
import { Image } from 'astro:assets';
import { ChevronLeft, Info, MapPin, Ruler, Star, Tag } from 'lucide-react';

const { slug } = Astro.params;
const { data } = await supabase
  .from('projects')
  .select()
  .eq('slug', slug ?? '')
  .single();
if (!data) return Astro.redirect('/projects');

const images = data.imgs?.length
  ? Array.from({ length: data.imgs.length }).map((_, index) =>
      imgUrlFromSb('projects', (data.imgs as string[])[index])
    )
  : null;
---

<MainLayout
  title={`${data.title} and Santienz Phils. Inc.`}
  desc=`${data.title} is one of the valued clients served by Santienz Phils. Inc. Explore our work on their project and how we helped bring their vision to life.`
  image={images !== null ? images[0] : null}
>
  <Header className="text-primary-foreground">
    <DesktopNavigation hideProjects client:load />
    <MobileNavigation hideProjects client:load />
  </Header>
  <section id="main-hero" class="bg-primary xmd:pt-30 relative w-full overflow-hidden pt-20">
    <Heading1AndP
      h1={data.title as string}
      p=`${data.title as string} is one of the valued clients served by Santienz Phils. Inc.
        Explore our work on their project and how we helped bring their vision to
        life.`
      withCta
      h1Class="text-tertiary"
      pClass="text-center text-primary-foreground"
      parentClass="max-w-6xl mx-auto px-4"
      alignment="center-only"
    >
      <CTAButton
        className="border-tertiary text-primary-foreground bg-tertiary/10 hover:bg-tertiary/20 hover:text-primary-foreground z-20 w-full px-12 drop-shadow-[0_4px_8px_var(--tertiary)] backdrop-blur"
        variant="outline"
        effect="shineHover"
        link="/projects"
      >
        <ChevronLeft />
        <span>Back to all projects</span>
      </CTAButton>
    </Heading1AndP>
    <MainHeroOverlay>
      {
        images ? (
          <Image
            src={images[0]}
            alt={data.title ? data.title : 'Grid 3D Background'}
            class="absolute inset-0 h-full w-full object-cover blur-xs brightness-75"
            quality="low"
            width={1080}
            height={720}
          />
        ) : (
          <Grid3DBg />
        )
      }
    </MainHeroOverlay>
  </section>

  <section class="text-muted-foreground mx-auto my-6 max-w-6xl space-y-2 px-4">
    <p>
      <span>
        <Star className="mr-1 inline size-5" />
      </span>
      Client: {data.title}
    </p>
    <p hidden={!data.address}>
      <span>
        <MapPin className="mr-1 inline size-5" />
      </span>
      Location: {data.address}
    </p>
    <p>
      <span>
        <Tag className="mr-1 inline size-5" />
      </span>
      Products used: {
        (data.products as string[]).map((prod, i) => (
          <span>
            <a
              href={`/products#${prod.toLocaleLowerCase().replaceAll(' ', '-')}`}
              class="text-primary hover:underline"
            >
              {(data.products as string[]).length - 1 !== i
                ? `${prod.toUpperCase()}, `
                : prod.toUpperCase()}
            </a>
          </span>
        ))
      }
    </p>
    <p hidden={!data.sqm}>
      <span>
        <Ruler className="mr-1 inline size-5" />
      </span>
      Area: {data.sqm}sqm
    </p>
    <p hidden={!data.description}>
      <span>
        <Info className="mr-1 inline size-5" />
      </span>
      Other info: {data.description}
    </p>
  </section>
  <section class="relative">
    {
      images ? (
        <div class="xmd:px-4 xxs:grid-cols-[repeat(auto-fit,minmax(240px,1fr))] xmd:grid-cols-[repeat(auto-fit,minmax(400px,1fr))] not-xmd:gap-1 relative mx-auto grid w-full max-w-6xl gap-4 px-1">
          {images?.map((img, i) => (
            <div class="relative m-auto h-full w-full overflow-hidden rounded-md">
              <Image
                class="h-full w-full object-cover"
                src={img}
                alt={`image-${i}-of-${data.slug}`}
                quality="mid"
                inferSize
              />
            </div>
          ))}
        </div>
      ) : null
    }
    <LinearGradientMask className="[mask-image:linear-gradient(transparent,transparent,white)]" />
  </section>
</MainLayout>
